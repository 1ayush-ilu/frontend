{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\final\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthCtx = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(() => JSON.parse(localStorage.getItem(\"user\") || \"null\"));\n\n  // ✅ Verify token on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return logout();\n      try {\n        const {\n          data\n        } = await api.get(\"/auth/me\"); // <-- make sure backend has this route\n        setUser(data.user);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n      } catch {\n        logout();\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    const {\n      data\n    } = await api.post(\"/auth/login\", {\n      email,\n      password\n    });\n    localStorage.setItem(\"token\", data.token);\n    localStorage.setItem(\"user\", JSON.stringify(data.user));\n    setUser(data.user);\n  };\n  const register = async payload => {\n    const {\n      data\n    } = await api.post(\"/auth/register\", payload);\n    localStorage.setItem(\"token\", data.token);\n    localStorage.setItem(\"user\", JSON.stringify(data.user));\n    setUser(data.user);\n  };\n  const logout = () => {\n    localStorage.clear();\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthCtx.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"Q+EArtNMe4i8mX6doO7CHdkMgmg=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthCtx);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthCtx","AuthProvider","children","_s","user","setUser","JSON","parse","localStorage","getItem","checkAuth","token","logout","data","get","setItem","stringify","login","email","password","post","register","payload","clear","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/final/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport api from \"../api\";\n\nconst AuthCtx = createContext();\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(() => JSON.parse(localStorage.getItem(\"user\") || \"null\"));\n\n  // ✅ Verify token on mount\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return logout();\n      try {\n        const { data } = await api.get(\"/auth/me\"); // <-- make sure backend has this route\n        setUser(data.user);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n      } catch {\n        logout();\n      }\n    };\n    checkAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    const { data } = await api.post(\"/auth/login\", { email, password });\n    localStorage.setItem(\"token\", data.token);\n    localStorage.setItem(\"user\", JSON.stringify(data.user));\n    setUser(data.user);\n  };\n\n  const register = async (payload) => {\n    const { data } = await api.post(\"/auth/register\", payload);\n    localStorage.setItem(\"token\", data.token);\n    localStorage.setItem(\"user\", JSON.stringify(data.user));\n    setUser(data.user);\n  };\n\n  const logout = () => {\n    localStorage.clear();\n    setUser(null);\n  };\n\n  return (\n    <AuthCtx.Provider value={{ user, login, register, logout }}>\n      {children}\n    </AuthCtx.Provider>\n  );\n}\n\nexport const useAuth = () => useContext(AuthCtx);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}